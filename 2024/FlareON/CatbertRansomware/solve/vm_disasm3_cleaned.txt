mem[0x08] = (mem[0x03] << 0x30 | mem[0x02] << 0x20 | mem[0x01] << 0x10 | mem[0x00])
mem[0x09] = (mem[0x07] << 0x30 | mem[0x06] << 0x20 | mem[0x05] << 0x10 | mem[0x04])
mem[0x1e] = 0xffff
mem[0x1d] = mem[0x1e]
mem[0x1e] = (mem[0x1e] << 0x10 | mem[0x1d])

mem[0x1b] = 0x0000
mem[0x1f] = 0x0000
mem[0x20] = 0x0000
mem[0x13] = 0x1505
LOOP1:
    if (mem[0x1b] >= 0x0004) goto 0x010f
    mem[0x1c] = (mem[0x08] >> (mem[0x1b] * 8))
    mem[0x1c] &= 0xff
    mem[0x1d] = mem[0x13]
    mem[0x13] = ((mem[0x13] << 5) + mem[0x1d] + mem[0x1c])
    mem[0x1b]++
mem[0x13] &= mem[0x1e]
mem[0x14] = (0x7c8d << 0x10 | 0xf4cb)
if (mem[0x14] != mem[0x13]) goto 0x0143
mem[0x1f]++
if (mem[0x1f] <= 0x0000) goto 0x01d9
mem[0x15] = 0x0000
LOOP2:
    if (mem[0x1b] >= 0x0008) goto 0x01a5
    mem[0x1c] = (mem[0x08] >> (mem[0x1b] * 8))
    mem[0x1c] &= 0xff
    mem[0x15] = ror32(mem[0x15], 0x0d)
    mem[0x15] += mem[0x1c]
    mem[0x1b]++
mem[0x15] &= mem[0x1e]
mem[0x16] = (0x8b68 << 0x10 | 0x1d82)
if (mem[0x16] != mem[0x15]) goto 0x01d9
mem[0x1f]++
if (mem[0x1f] <= 0x0001) goto 0x029e
mem[0x11] = 0x0001
mem[0x12] = 0x0000
mem[0x17] = 0x0000
mem[0x1b] = 0x0000
LOOP3:
    if (mem[0x1b] >= 0x0008) goto 0x0259
    mem[0x1c] = (mem[0x09] >> (mem[0x1b] * 8))
    mem[0x1c] &= 0xff
    mem[0x11] = (mem[0x11] + mem[0x1c]) % 0xfff1
    mem[0x12] = (mem[0x12] + mem[0x11]) % 0xfff1
    mem[0x1b]++
mem[0x17] = (mem[0x12] << 0x10 | mem[0x11])
mem[0x17] &= mem[0x1e]
mem[0x18] = (0x0f91 << 0x10 | 0x0374)
if (mem[0x18] != mem[0x17]) goto 0x029e
mem[0x1f]++
if (mem[0x1f] <= 0x0002) goto 0x03b2
mem[0x0a] = 0x0193
mem[0x0b] = 0x0100
mem[0x0c] = (mem[0x0b] << 0x10 | mem[0x0a])
mem[0x0d] = 0x9dc5
mem[0x0e] = 0x811c
mem[0x0f] = (mem[0x0e] << 0x10 | mem[0x0d])
mem[0x10] = 1 << 0x20
mem[0x19] = mem[0x0f]
mem[0x1b] = 0x0000
LOOP4:
    if (mem[0x1b] >= 0x10) goto 0x037e
    if (mem[0x1b] >= 0x08) goto 0x0328
        mem[0x1c] = (mem[0x08] >> (mem[0x1b] * 8))
    if (mem[0x1b] <= 0x0007) goto 0x0344
        mem[0x1c] = (mem[0x09] >> (mem[0x1b] * 8))
    mem[0x1c] &= 0xff
    mem[0x19] = (mem[0x19] * mem[0x0c]) % mem[0x10]
    mem[0x19] ^= mem[0x1c]
    mem[0x1b]++
mem[0x19] &= mem[0x1e]
mem[0x1a] = (0x31f0 << 0x10 | 0x09d2)
if (mem[0x1a] != mem[0x19]) goto 0x03b2
mem[0x1f]++
if (mem[0x1f] != 0x0004) goto 0x03c4
mem[0x20] = 0x0001
return mem[0x20]
